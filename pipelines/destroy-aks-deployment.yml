name: $(BuildDefinitionName)_$(date:yyyyMMdd)$(rev:.r)

trigger: none
pr: none

variables:
- group: global-variables
- name: azureSubscription
  value: devopssc-allpipes
- name: terraformVersion
  value: 1.7.4
- name: terraformPath
  value: terraform
- name: tfstatePath
  value: terraform.tfstate
- name: terraformBackendResourceGroupName
  value: rg-agent-terraform
- name: terraformBackendStorageAccountName
  value: tfstate6581
- name: terraformBackendContainerName
  value: tfstate

pool:
  name: Default

stages:
- stage: destroy
  displayName: 'Terraform Destroy'
  jobs:
  - job: destroy
    displayName: 'Terraform Destroy'
    continueOnError: false
    steps:
    - checkout: self

    - task: TerraformInstaller@0
      displayName: 'Terraform Install'
      inputs:
        terraformVersion: $(terraformVersion)

    - task: TerraformTaskV2@2
      displayName: 'Terraform Init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: $(azureSubscription)
        backendAzureRmResourceGroupName: $(terraformBackendResourceGroupName)
        backendAzureRmStorageAccountName: $(terraformBackendStorageAccountName)
        backendAzureRmContainerName: $(terraformBackendContainerName)
        backendAzureRmKey: $(tfstatePath)
        ensureBackend: true
        allowTelemetryCollection: false
        workingDirectory: '$(System.DefaultWorkingDirectory)/$(terraformPath)/'

    - task: TerraformTaskV2@2
      displayName: 'Terraform Destroy'
      inputs:
        provider: 'azurerm'
        command: 'destroy'
        commandOptions: >
          -input=false -auto-approve
          -var="ssh_public_key=$(sshPublicKey)"
        environmentServiceNameAzureRM: $(azureSubscription)
        workingDirectory: '$(System.DefaultWorkingDirectory)/$(terraformPath)/'
